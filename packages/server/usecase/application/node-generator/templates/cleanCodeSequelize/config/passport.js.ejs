
/*
* <%- STRATEGY %> authentication - with passport
*/

const { Strategy, ExtractJwt } = require("passport-jwt")
const { JWT } = require("../constants/authConstant")
const userModel  = require("../model").<%-MODEL%>
const <%-MODEL%>Service = require("../services/dbService")({model:userModel});
module.exports = {
   <%- STRATEGY.toLowerCase() %>PassportStrategy: passport => {
       const options = {};
       options.jwtFromRequest = ExtractJwt.fromAuthHeaderAsBearerToken();
       options.secretOrKey = JWT.<%- STRATEGY.toUpperCase() %>_SECRET;
       passport.use('<%- STRATEGY.toLowerCase() %>-rule',
           new Strategy(options, (payload, done) => {
            <%-MODEL%>Service.findOne({id: payload.id}).then((user)=>{
                   if (user) {
                     return done(null, { ...user.toJSON() });
                   }
                   return done('No User Found', {});
                 }).catch(err => done(err, false))
           })
       );
   }
}