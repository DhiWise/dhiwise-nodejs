<%_ let usedDb = []; _%>
<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%> 
    const <%-model%>Db = require('../../../data-access/<%-model %>Db');
<%_ usedDb.push(model);  }); _%>

<%_ if(!usedDb.includes(DB_MODEL)){_%>
const <%-DB_MODEL %>Db = require('../../../data-access/<%-DB_MODEL %>Db');
<%_ } _%>

const <%-DB_MODEL %>Schema = require('../../../validation/schema/<%-DB_MODEL %>');

const createValidation = require('../../../validation')(<%-DB_MODEL %>Schema.createSchema);
const updateValidation = require('../../../validation')(<%-DB_MODEL %>Schema.updateSchema);
const filterValidation = require('../../../validation')(<%-DB_MODEL %>Schema.filterValidationSchema);

<%_for(const controllerMethod in CONTROLLER_METHODS){_%>
    <%_ if(controllerMethod === 'create'){ _%>
        const <%-controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/create')({ <%-DB_MODEL %>Db,createValidation });
    <%_}_%>
    <%_ if(controllerMethod === 'update'){ _%>
        const <%-controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/update')({ <%-DB_MODEL %>Db, updateValidation });
    <%_}_%>
    <%_ if(controllerMethod === 'delete'){ _%>
        const <%-controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/deleteOne')({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>});
    <%_}_%>
    <%_ if(controllerMethod === 'findById'){ _%>
        const <%- controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/findById')({ <%-DB_MODEL %>Db, filterValidation});
    <%_}_%>
    <%_ if(controllerMethod === 'findAll'){ _%>
        const <%-controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/findAll')({ <%-DB_MODEL %>Db, filterValidation});
    <%_}_%>
    <%_ if(controllerMethod === 'count'){ _%>
        const <%- controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/count')({ <%-DB_MODEL %>Db,filterValidation});
    <%_}_%>
        <%_ if(controllerMethod === 'createBulk'){ _%>
        const <%- controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/createBulk')({ <%-DB_MODEL %>Db});
    <%_}_%>
    <%_ if(controllerMethod === 'bulkUpdate'){ _%>
        const <%-controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/updateBulk')({ <%-DB_MODEL %>Db});
    <%_}_%>
    <%_ if(controllerMethod === 'deleteMany'){ _%>
        const <%-controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/deleteMany')({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>});
    <%_}_%>
    <%_ if(controllerMethod === 'softDelete'){ _%>
        const <%- controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/softDelete')({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>});
    <%_}_%>
    <%_ if(controllerMethod === 'softDeleteMany'){ _%>
        const <%- controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/softDeleteMany')({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>});
    <%_}_%>
    <%_ if(controllerMethod === 'partialUpdate'){ _%>
        const <%- controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/partialUpdate')({ <%-DB_MODEL %>Db,updateValidation});
    <%_}_%>
    <%_ if(controllerMethod === 'aggregate'){ _%>
        const <%- controllerMethod + DB_MODEL_FC %>Usecase = require('../../../use-case/<%-DB_MODEL %>/aggregate')({ <%-DB_MODEL %>Db});
    <%_}_%>
<%_}_%>
<%_if(typeof USER_MODEL !== "undefined" && USER_MODEL){_%>
const changePasswordUsecase = require('../../../use-case/<%-DB_MODEL %>/changePassword')({ <%-DB_MODEL %>Db});
const updateProfileUsecase = require('../../../use-case/<%-DB_MODEL %>/updateProfile')({ <%-DB_MODEL %>Db,updateValidation});
<%_}_%>
<%_if(CUSTOM_ROUTES){_%>
  <%_CUSTOM_ROUTES.forEach((v,i)=>{_%>
    const <%-v.functionName%>Usecase = require('../../../use-case/<%-DB_MODEL %>/<%-v.functionName%>')({ <%-DB_MODEL %>Db});
  <%_});_%>
<%_}_%>

const <%-DB_MODEL %>Controller = require('./<%-DB_MODEL %>');

<%_for(const controllerMethod in CONTROLLER_METHODS){_%>
    <%_ if(controllerMethod === 'create'){ _%>
        const add<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.add<%-DB_MODEL_FC %>(<%-controllerMethod +DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'update'){ _%>
        const update<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.update<%-DB_MODEL_FC %>(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'delete'){ _%>
        const delete<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.delete<%-DB_MODEL_FC %>(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'findById'){ _%>
        const get<%-DB_MODEL_FC %>ById = <%-DB_MODEL %>Controller.get<%-DB_MODEL_FC %>ById(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'findAll'){ _%>
        const findAll<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.findAll<%-DB_MODEL_FC %>(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'count'){ _%>
        const get<%-DB_MODEL_FC %>Count = <%-DB_MODEL %>Controller.get<%-DB_MODEL_FC %>Count(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
        <%_ if(controllerMethod === 'createBulk'){ _%>
        const bulkInsert<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.bulkInsert<%-DB_MODEL_FC %>(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'bulkUpdate'){ _%>
        const bulkUpdate<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.bulkUpdate<%-DB_MODEL_FC %>(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'deleteMany'){ _%>
        const deleteMany<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.deleteMany<%-DB_MODEL_FC %>(<%-controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'softDelete'){ _%>
        const softDelete<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.softDelete<%-DB_MODEL_FC %>(<%-controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'softDeleteMany'){ _%>
        const softDeleteMany<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.softDeleteMany<%-DB_MODEL_FC %>(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'partialUpdate'){ _%>
        const partialUpdate<%-DB_MODEL_FC %> = <%-DB_MODEL %>Controller.partialUpdate<%-DB_MODEL_FC %>(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
    <%_ if(controllerMethod === 'aggregate'){ _%>
    const get<%-DB_MODEL_FC %>ByAggregate = <%-DB_MODEL %>Controller.get<%-DB_MODEL_FC %>ByAggregate(<%- controllerMethod + DB_MODEL_FC %>Usecase);
    <%_}_%>
<%_}_%>
<%_if(typeof USER_MODEL !== "undefined" && USER_MODEL){_%>
const changePassword = <%-DB_MODEL %>Controller.changePassword(changePasswordUsecase);
const updateProfile = <%-DB_MODEL %>Controller.updateProfile(updateProfileUsecase);
<%_}_%>
<%_if(CUSTOM_ROUTES){_%>
  <%_CUSTOM_ROUTES.forEach((v,i)=>{_%>
    const <%-v.functionName%> = <%-DB_MODEL %>Controller.<%-v.functionName%>(<%-v.functionName%>Usecase);
  <%_});_%>
<%_}_%>


<%_
// Code For custom route
let shouldPassCQ_Imports = false
_%>

module.exports = {
<%_for(const controllerMethod in CONTROLLER_METHODS){_%>
    <%_ if(controllerMethod === 'create'){ _%>
        add<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'update'){ _%>
        update<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'delete'){ _%>
        delete<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'findById'){ _%>
        get<%-DB_MODEL_FC %>ById,
    <%_}_%>
    <%_ if(controllerMethod === 'findAll'){ _%>
        findAll<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'count'){ _%>
        get<%-DB_MODEL_FC %>Count,
    <%_}_%>
    <%_ if(controllerMethod === 'createBulk'){ _%>
        bulkInsert<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'bulkUpdate'){ _%>
        bulkUpdate<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'deleteMany'){ _%>
        deleteMany<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'softDelete'){ _%>
        softDelete<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'softDeleteMany'){ _%>
        softDeleteMany<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'partialUpdate'){ _%>
        partialUpdate<%-DB_MODEL_FC %>,
    <%_}_%>
    <%_ if(controllerMethod === 'aggregate'){ _%>
        get<%-DB_MODEL_FC %>ByAggregate,
    <%_}_%>
<%_}_%>
<%_if(typeof USER_MODEL !== "undefined" && USER_MODEL){_%>
    changePassword,
    updateProfile,
    <%_}_%>
<%_if(CUSTOM_ROUTES){_%>
  <%_CUSTOM_ROUTES.forEach((v,i)=>{_%>
    <%-v.functionName%>,
  <%_});_%>
<%_}_%>
};