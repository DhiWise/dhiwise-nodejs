/**
 deleteMany.js
 */

const response = require('../../utils/response');
<%_ if(DELETE_DEPENDENT_MODEL){ _%>
    const makeGetDependencyCount = require('./deleteDependent').getDependencyCount;
    const makeDeleteWithDependency = require('./deleteDependent').deleteWithDependency;
<%_ } _%>

<%_ if(DELETE_DEPENDENT_MODEL){ _%>
const deleteMany = ({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>}) => async (params) => {
     let { query,data } = params;
    let result;
    if(data.isWarning){
        const getDependencyCount = makeGetDependencyCount({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>}) //dependency injection
        result = await getDependencyCount(query);
        return response.success({data:result});
    }else {
        const deleteWithDependency = makeDeleteWithDependency({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>}) //dependency injection
        return await deleteWithDependency(query)
    }
}
<%_ } else { _%>
    const deleteMany = ({ <%-MODEL_NAME%>Db }) => async (params) => {
    let { query } = params;
    let result = await <%-MODEL_NAME%>Db.deleteMany(query);
    return response.success({data:result});
};
<%_ } _%>
module.exports = deleteMany;