/**
 deleteMany.js
 */

const response = require('../../utils/response');
<%_ if(DELETE_DEPENDENT_MODEL){ _%>
    const makeGetDependencyCount = require('./deleteDependent').getDependencyCount;
    const makeDeleteWithDependency = require('./deleteDependent').deleteWithDependency;
<%_ } _%>

/**
* @description : delete records of <%-DB_MODEL_FC%> from database by using ids.
* @param {Object} params : params including query to delete documents.
* @return {Object} : no of documents deleted. {status, message, data}
*/
<%_ if(DELETE_DEPENDENT_MODEL){ _%>
const deleteMany = ({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>}) => async (params) => {
    let { query,isWarning } = params;
    if(isWarning){
        const getDependencyCount = makeGetDependencyCount({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>});
        let result = await getDependencyCount(query);
        return response.success({data:result});
    }else {
        const deleteWithDependency = makeDeleteWithDependency({<%_ DB_DEPENDENCY_INJECTION.forEach((model) => {_%><%- model %>Db<%_ if(DB_DEPENDENCY_INJECTION[DB_DEPENDENCY_INJECTION.length - 1] != model ){%>,<%_} }); %>});
        return await deleteWithDependency(query)
    }
}
<%_ } else { _%>
const deleteMany = ({ <%-MODEL_NAME%>Db }) => async (params) => {
    let result = await <%-MODEL_NAME%>Db.deleteMany(params.query);
    return response.success({data:result});
};
<%_ } _%>
module.exports = deleteMany;