/**
 changePassword.js
 */
const bcrypt = require("bcrypt");
const response = require('../../utils/response');

/**
 * @description : change password.
 * @param {Object} params : request body including passwords and user id.
 * @return {Object} : Status whether password is changed or not.
 */

const changePassword = ({<%-MODEL_NAME-%>Db}) => async (params) => {

  if (!params.newPassword || !params.userId || !params.oldPassword) {
    return response.validationError({message:'Please Provide userId and new Password and Old password'});
  }
  let password = params.newPassword;
  let oldPassword = params.oldPassword;
  let user = await <%-MODEL_NAME%>Db.findOne({_id :params.userId });
  if(!user){
    return response.badRequest({message:'User not found.'});
  }
  let isPasswordMatch = await user.isPasswordMatch(oldPassword);
  if(!isPasswordMatch){
    return response.badRequest({message:'Incorrect old password.'});
  }
  password = await bcrypt.hash(password, 8);
  let updatedUser = <%-MODEL_NAME%>Db.updateOne({_id : user.id}, { <%-PASSWORD_FIELD%>:password });
  if (!updatedUser) {
    return response.badRequest({message : 'Password not updated.'});
  }
  return response.success({message : 'Password changed successfully.'});
}

module.exports = changePassword;