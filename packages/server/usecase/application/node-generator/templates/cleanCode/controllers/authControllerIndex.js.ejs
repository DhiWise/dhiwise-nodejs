const db = require("mongoose");
const userModel  =require("../../../model/<%-MODEL%>")(db)
const userToken = require("../../../model/userTokens")(db);
const {schemaKeys,updateSchemaKeys} = require('../../../validation/<%-MODEL%>Validation')
const insert<%-MODEL.charAt(0).toUpperCase() + MODEL.slice(1);%>Validator = require("../../../validation/genericValidator")(schemaKeys)
const update<%-MODEL.charAt(0).toUpperCase() + MODEL.slice(1);%>Validator = require("../../../validation/genericValidator")(updateSchemaKeys)
const make<%-MODEL.charAt(0).toUpperCase() + MODEL.slice(1);%>=require("../../../entity/<%-MODEL%>")({insert<%-MODEL.charAt(0).toUpperCase() + MODEL.slice(1);%>Validator,update<%-MODEL.charAt(0).toUpperCase() + MODEL.slice(1);%>Validator})
const <%-MODEL%>Service = require("../../../services/mongoDbService")({model:userModel,make<%-MODEL.charAt(0).toUpperCase() + MODEL.slice(1);%>});
const userTokenService = require("../../../services/mongoDbService")({model:userToken});
<%_if(ROLE_PERMISSION){_%>
const userRoleModel  =require("../../../model/userRole")(db);
const userRoleService = require("../../../services/mongoDbService")({model:userRoleModel});
const routeRoleModel  =require("../../../model/routeRole")(db);
const routeRoleService = require("../../../services/mongoDbService")({model:routeRoleModel});
<%_}_%>
const authService = require("../../../services/auth")({model:userModel,<%-MODEL%>Service,userTokenService<%_if(ROLE_PERMISSION){_%>,userRoleService,routeRoleService<%_}_%>});
<%_if(REGISTER_NOTIFICATION_TYPE==="EMAIL"){_%>
const sendEmail = require("../../../services/email/emailService");
<%_}else if(REGISTER_NOTIFICATION_TYPE==="SMS"){_%>
const sendSMS = require("../../../services/sms/smsService");
<%_}_%>
const makeUniqueValidation = require('../../../utils/common.js').makeUniqueValidation(<%-MODEL%>Service);
const makeAuthController = require("./authController");
const authController = makeAuthController({authService,makeUniqueValidation,<%-MODEL%>Service,make<%-MODEL.charAt(0).toUpperCase() + MODEL.slice(1);%>,userTokenService});
module.exports = authController