/**
 * <%-STRATEGY%>PassportStrategy.js
 */

const { Strategy, ExtractJwt } = require("passport-jwt")
const { JWT } = require("../constants/authConstant")
const <%- MODEL %> = require("../model/<%- MODEL%>")

/**
 * @description : exports authentication strategy for <%-STRATEGY.toLowerCase()%> using passport.js
 * @params {obj} passport : passport object for authentication
 * @return {callback} : returns callback to be used in middleware
 */
const <%-STRATEGY.toLowerCase()%>PassportStrategy = (passport) => {
    const options = {};
    options.jwtFromRequest = ExtractJwt.fromAuthHeaderAsBearerToken();
    options.secretOrKey = JWT.<%-STRATEGY.toUpperCase()%>_SECRET;
    passport.use('<%-STRATEGY.toLowerCase()%>-rule',
        new Strategy(options, (payload, done) => {
            <%- MODEL%>.findOne({ _id: payload.id }, (err, user) => {
                if (err) {
                    return done(err, false);
                }
                if (user) {
                    return done(null, {
                        ...user.toJSON()
                    });
                }
                return done('No User Found', {});
            });
        })
    );
}

module.exports = {
    <%-STRATEGY.toLowerCase()%>PassportStrategy,
}